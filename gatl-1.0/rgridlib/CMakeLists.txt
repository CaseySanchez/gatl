PROJECT(RGridLib)
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)


# Make some changes in CMake properties.
SET(CMAKE_NOT_USING_CONFIG_FLAGS ON CACHE BOOL "" FORCE)

IF(NOT ${PROJECT_NAME}_DONT_OVERRIDE_CMAKE_FLAGS)
  SET(CMAKE_BUILD_TYPE Release CACHE STRING "" FORCE)

  IF(MSVC)
  
    SET(ORIGINAL_ENTRY ${CMAKE_C_FLAGS_RELEASE})
    SET(CMAKE_C_FLAGS_RELEASE "${ORIGINAL_ENTRY} /bigobj /D_SECURE_SCL=0" CACHE STRING "" FORCE)

    SET(ORIGINAL_ENTRY ${CMAKE_CXX_FLAGS_RELEASE})
    SET(CMAKE_CXX_FLAGS_RELEASE "${ORIGINAL_ENTRY} /bigobj /D_SECURE_SCL=0" CACHE STRING "" FORCE)

    SET(ORIGINAL_ENTRY ${CMAKE_EXE_LINKER_FLAGS_RELEASE})
    SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${ORIGINAL_ENTRY} /OPT:REF /OPT:ICF" CACHE STRING "" FORCE)

  ENDIF()

  SET(${PROJECT_NAME}_DONT_OVERRIDE_CMAKE_FLAGS "ON" CACHE BOOL "" FORCE)
ENDIF()


# Find required packages.
FIND_PACKAGE(LALib REQUIRED PATHS "../lalib/build")
INCLUDE(${LALib_USE_FILE})


# Set (local) include directories.
INCLUDE_DIRECTORIES("include")


# Set source groups.
SET(INCLUDE_PATHS
  "/"
  "/rgrid")
  
FOREACH(INCLUDE_PATH ${INCLUDE_PATHS})
  FILE(GLOB CURRENT_HEADER_FILES include${INCLUDE_PATH}/*.h)
  LIST(APPEND HEADER_FILES ${CURRENT_HEADER_FILES})

  STRING(REPLACE "/" "\\\\" CURRENT_HEADER_GROUP ${INCLUDE_PATH})
  SOURCE_GROUP("Header Files${CURRENT_HEADER_GROUP}" FILES ${CURRENT_HEADER_FILES})
ENDFOREACH()


# Setup library.
ADD_LIBRARY(${PROJECT_NAME} "source/validate.cpp" ${HEADER_FILES})
SET(${PROJECT_NAME}_IS_TEMPLATE_LIBRARY TRUE)
LIST(APPEND LIBRARY_NAMES ${PROJECT_NAME})


# Help outside projects.
INCLUDE("${${PROJECT_NAME}_SOURCE_DIR}/../CMakeTemplateInstall.cmake")
INCLUDE("${${PROJECT_NAME}_SOURCE_DIR}/../CMakeTemplateExport.cmake")